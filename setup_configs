#!/usr/bin/env python

import os
import glob


pwd = os.environ['PWD']+'/'
home = os.environ['HOME']+'/'
scriptsFolder = '{}/.scripts/'.format(home)
i3Folder = '{}/.i3/'.format(home)
i3StatusFolder = '{}/.config/i3status/'.format(home)
conkyFolder = '{}/.conky/'.format(home)

def setupConfigs(isDesktop = False):
    ## Scripts
    if not os.path.isdir(scriptsFolder): os.makedirs(scriptsFolder)
    for scriptPath in glob.glob('{}/scripts/*'.format(pwd)):
        linkFile(scriptPath, scriptsFolder, isDesktop = isDesktop)
    
    ## Shell
    linkFile('{}/shell/zshrc'.format(pwd), home, targetFileName = '.zshrc', isDesktop = isDesktop)

    ## i3
    if not os.path.isdir(i3Folder): os.makedirs(i3Folder)
    if not os.path.isdir(i3StatusFolder): os.makedirs(i3StatusFolder)
    for fileName in glob.glob('{}/i3/*'.format(pwd)):
        targetFolder = i3Folder
        if '.i3status' in fileName:
            targetFolder = i3StatusFolder
        targetFileName = None
        if 'config.' in fileName:
            targetFileName = 'config'
        linkFile(fileName, targetFolder, targetFileName = targetFileName, isDesktop = isDesktop)

    ## X11 stuff
    linkFile('{}/xconfigs/xmodmap'.format(pwd), home, targetFileName = '.xmodmap', isDesktop = isDesktop)
    for fileName in glob.glob('{}/xconfigs/Xresources.*'.format(pwd)):
        linkFile(fileName, home, targetFileName = '.Xresources', isDesktop = isDesktop)

    ## conky setup (only on Laptop)
    if not isDesktop:
        if not os.path.isdir(conkyFolder): os.makedirs(conkyFolder)
        for fileName in glob.glob('{}/conky/*'.format(pwd)):
            linkFile(fileName, conkyFolder, isDesktop = isDesktop)

def linkFile(sourceFile, targetFolder, targetFileName = None, isDesktop = False):
    if sourceFile.endswith('.desktop') and not isDesktop: return
    if sourceFile.endswith('.laptop') and isDesktop: return
    targetFile = targetFileName or sourceFile.rsplit('/', 1)[-1]
    for suffix in ['.desktop', '.laptop']:
        if targetFile.endswith(suffix): targetFile = targetFile.rsplit(suffix, 1)[0]
    targetFile = '{}/{}'.format(targetFolder, targetFile)
    if os.path.isfile(targetFile): os.remove(targetFile)
    os.symlink(sourceFile, targetFile)


if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser(description = 'Configs setup script')
    parser.add_argument('-d', action = 'store_true', dest = 'isDesktop', help = 'Make setup for desktop instead of laptop', default = False)
    args = parser.parse_args()
    setupConfigs(isDesktop = args.isDesktop)
